; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = .

[common]
build_flags = 
	-DVTABLES_IN_FLASH -D BEARSSL_SSL_BASIC
	-D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
	-D HTTPCLIENT_1_1_COMPATIBLE=0
	-DNDEBUG
	-Wl,-Teagle.flash.4m3m.ld
build_flags_esp32 = 
	-DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
	-DVTABLES_IN_FLASH -DBEARSSL_SSL_BASIC
build_flags_esp32_release = ${common.build_flags_esp32} -DNDEBUG
build_flags_esp32_debug = ${common.build_flags_esp32} -g -Og -fno-inline -DUSING_JTAG_DEBUGGER_PINS=1 -DDEBUG_ESP_PORT=Serial
board_build.f_cpu = 160000000L
lib_deps_generic_external = 
	1@2.3.4
	576@1.1.4
	Adafruit HTU21DF Library@1.0.2
	ArduinoJson@6.13.0
	DallasTemperature@3.8.0
	ESP8266_SSD1306@4.1.0
	797@1.0.1
	https://github.com/CodeForAfrica/sensors.AFRICA-Adafruit_FONA.git
lib_deps_esp8266_platform = 
	Hash
	Wire
	ESP8266WiFi
	DNSServer
	ESP8266HTTPClient
	ESP8266WebServer
	ESP8266mDNS
	EspSoftwareSerial
lib_deps_esp32_platform = 
	Wire
	WiFi
	DNSServer
	WiFiClientSecure
	HTTPClient
	FS
	SPIFFS
	WebServer
	Update
	ESPmDNS
lib_deps_esp8266 = ${common.lib_deps_esp8266_platform} ${common.lib_deps_generic_external}
lib_deps_esp32 = ${common.lib_deps_esp32_platform} ${common.lib_deps_generic_external}
extra_scripts = platformio_script.py
platform_version = espressif8266@2.3.1
platform_version_esp32 = espressif32@1.11.1

[env]
monitor_speed = 9600
upload_port = /dev/cu.wchusbserial14110
lib_ignore = TinyWireM
lib_ldf_mode = deep+

[DISABLEDenv:lolin_d32_pro_debug]
lang = DE
platform = ${common.platform_version_esp32}
framework = arduino
board = lolin_d32_pro
build_flags = ${common.build_flags_esp32_debug} '-DINTL_DE' '-DFLIP_I2C_PMSERIAL'
lib_deps = ${common.lib_deps_esp32}
extra_scripts = ${common.extra_scripts}
debug_tool = custom
targets = debug

[DISABLEDenv:heltec_wifi_lora_32_V2]
lang = DE
platform = ${common.platform_version_esp32}
framework = arduino
board = heltec_wifi_lora_32_V2
build_flags = ${common.build_flags_esp32_release} '-DINTL_DE' '-DESP32_WROOM_MODULE'
lib_deps = ${common.lib_deps_esp32}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2]
lang = de
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
check_tool = clangtidy
check_flags = 
	clangtidy: --checks=-*,cert-*,bugprone-*,clang-analyzer-*,hicpp-*,modernize-*,performance-*,portability-*,-readability-*
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_DE
lib_deps = 
	${common.lib_deps_esp8266}
	thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.2.1
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_bg]
lang = bg
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_BG
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_cz]
lang = cz
framework = arduino
platform = ${common.platform_version}
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_CZ
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_dk]
lang = dk
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_DK
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_en]
lang = en
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_EN
lib_deps = 
	${common.lib_deps_esp8266}
	thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.2.1
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_es]
lang = es
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_ES
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_fr]
lang = fr
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_FR
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_it]
lang = it
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_IT
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_lu]
lang = lu
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_LU
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_nl]
lang = nl
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_NL
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_pl]
lang = pl
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_PL
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_pt]
lang = pt
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_PT
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_rs]
lang = rs
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_RS
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_ru]
lang = ru
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_RU
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_se]
lang = se
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_SE
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_tr]
lang = tr
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_TR
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[DISABLEDenv:nodemcuv2_ua]
lang = ua
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} -DINTL_UA
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}
